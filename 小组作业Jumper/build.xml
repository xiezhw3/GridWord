<?xml version="1.0" encoding="UTF-8" ?>

<project name="junitHelloTest" default="all">
	<!-- project directories-->
	<property name="src" location="src" />
	<property name="test" location="test" />
	<property name="lib" location="lib" />
	<property name="build" location="build" />
	<property name="build.classes" value="${build}/classes" />
	<property name="build.test" value="${build}/test" />
	<property name="build.test.classes" value="${build.test}/classes" />
	<property name="build.test.report" value="${build.test}/report" />
	<property name="runTest" value="**/*Test.class" />

	<!--path-->
	<path id="lib_path">
		<fileset dir="${lib}">
			<include name="*.jar" />
		</fileset>
	</path>
	<path id="compile_path">
		<path refid="lib_path" />
		<pathelement location="${build.classes}" />
	</path>
	<path id="compile_test_path">
		<path refid="compile_path" />
		<pathelement location="${build.test.classes}" />
	</path>

	<!-- target-->
	<target name="clean" description="Remove all generated file">
		<echo>清理文件内容</echo>
		<delete dir="${build}"></delete>
	</target>
	<target name="init" depends="clean" description="Prepare for the ant build">
		<echo>项目的初始化</echo>
		<mkdir dir="${build}" />
		<mkdir dir="${build.classes}" />
		<mkdir dir="${build.test}" />
		<mkdir dir="${build.test.classes}" />
		<mkdir dir="${build.test.report}" />
	</target>
	<target name="compile_src" depends="init">
		<echo>编译源文件</echo>
		<javac srcdir="${src}" destdir="${build.classes}"
			 classpathref="compile_path" includeantruntime="true" />
	</target>
	<target name="compile_test" depends="compile_src">
		<echo>编译测试文件</echo>
		<javac srcdir="${test}" destdir="${build.test.classes}"
			classpathref="compile_path" includeantruntime="true" />
	</target>

	<!--This target is for junit test-->
	<target name="run-test" depends="compile_test" description="Junit test helloWorld project">
		<echo>开始运行junit测试</echo>
		<junit printsummary="true" haltonfailure="false">
			<classpath refid="compile_test_path"></classpath>
			<formatter type="xml" />
			<batchtest todir="${build.test.report}">
				<fileset dir="${build.test.classes}" includes="${runTest}" />
			</batchtest>
		</junit>
		<junitreport todir="${build.test.report}">
			<fileset dir="${build.test.report}" includes="TEST-*.xml" />
			<report format="frames" todir="${build.test.report}/html" />
		</junitreport>
	</target>
	<target name="all" depends="run-test">
		<echo>测试结束</echo>
	</target>
</project>

